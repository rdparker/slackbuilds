#!/bin/sh
# $Id: dosemu.SlackBuild,v 1.8 2008/05/23 09:39:59 root Exp root $
# Copyright (c) 2007-2008 Eric Hameleers <alien@slackware.com>
#
#  Permission to use, copy, modify, and distribute this software for
#  any purpose with or without fee is hereby granted, provided that
#  the above copyright notice and this permission notice appear in all
#  copies.
#
#  THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
#  IN NO EVENT SHALL THE AUTHORS AND COPYRIGHT HOLDERS AND THEIR
#  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
#  USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
#  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
#  OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
#  OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
#  SUCH DAMAGE.
# -----------------------------------------------------------------------------
#
# Slackware SlackBuild script 
# ===========================
# By:        Eric Hameleers <alien@slackware.com>
# For:       dosemu
# Descr:     a DOS EMUlator
# URL:       http://www.dosemu.org/
# Needs:     
# Changelog:
# 1.3.4-1:   06/Feb/2007 by Eric Hameleers <alien@slackware.com>
#            * Initial build.
# 1.3.5-1:   29/apr/2007 by Eric Hameleers <alien@slackware.com>
#            * Update.
# 1.4.0-1:   14/oct/2007 by Eric Hameleers <alien@slackware.com>
#            * Update.
# 1.4.0-2:   16/dec/2007 by Eric Hameleers <alien@slackware.com>
#            * Fix permissions on the freedos binaries.
# 1.4.0-3:   23/may/2008 by Eric Hameleers <alien@slackware.com>
#            * SlackBuild script updates
# 
# Run 'sh dosemu.SlackBuild --cleanup' to build a Slackware package.
# The package (.tgz) plus descriptive .txt file are created in /tmp .
# Install using 'installpkg'. 
#
# -----------------------------------------------------------------------------

# Set initial variables:

PRGNAM=dosemu
VERSION=${VERSION:-"1.4.0"}
FDVERSION=${FDVERSION:-"1.0"}
ARCH=${ARCH:-"i486"}
BUILD=${BUILD:-3}
TAG=${TAG:-alien}

DOCS="BUGS COPYING* ChangeLog* INSTALL NEWS QuickStart README* THANKS VERSION"

# Where do we look for sources?
SRCDIR=$(cd $(dirname $0); pwd)

# Place to build (TMP) package (PKG) and output (OUTPUT) the program:
TMP=${TMP:-"/tmp/build"}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-"/tmp"}

SOURCE[0]="$SRCDIR/${PRGNAM}-${VERSION}.tgz"
SRCURL[0]="http://downloads.sourceforge.net/${PRGNAM}/${PRGNAM}-${VERSION}.tgz"

# This is the binary freedos package needed by dosemu:
SOURCE[1]="$SRCDIR/${PRGNAM}-freedos-${FDVERSION}-bin.tgz"
SRCURL[1]="http://downloads.sourceforge.net/${PRGNAM}/${PRGNAM}-freedos-${FDVERSION}-bin.tgz"

# For completeness sake, the sources for the freedos-bin package (even though
# we will not use them:
SOURCE[2]="$SRCDIR/${PRGNAM}-freedos-${FDVERSION}-sources.tgz"
SRCURL[2]="http://downloads.sourceforge.net/${PRGNAM}/${PRGNAM}-freedos-${FDVERSION}-sources.tgz"

##
## --- with a little luck, you won't have to edit below this point --- ##
##

# Exit the script on errors:
set -e
trap 'echo "$0 FAILED at line $LINENO!" | tee $OUTPUT/error-${PRGNAM}.log' ERR
# Catch unitialized variables:
set -u
P1=${1:-1}

# Slackware 11 and up need other option (gcc > 3.3.x)
if [ $(gcc -dumpversion | tr -d  '.' |cut -c 1-2) -gt 33 ]; then
  MOPT=tune
else
  MOPT=cpu
fi

case "$ARCH" in
  i486)      SLKCFLAGS="-O2 -march=i486 -m${MOPT}=i686"
             SLKLDFLAGS=""; LIBDIRSUFFIX=""
             ;;
  s390)      SLKCFLAGS="-O2"
             SLKLDFLAGS=""; LIBDIRSUFFIX=""
             ;;
  powerpc)   SLKCFLAGS="-O2"
             SLKLDFLAGS=""; LIBDIRSUFFIX=""
             ;;
  x86_64)    SLKCFLAGS="-O2 -fPIC"
             SLKLDFLAGS="-L/usr/lib64"; LIBDIRSUFFIX="64"
             ;;
  athlon-xp) SLKCFLAGS="-march=athlon-xp -O3 -pipe -fomit-frame-pointer"
             SLKLDFLAGS=""; LIBDIRSUFFIX=""
             ;;
esac

# Prepare build environment:
mkdir -p $TMP/tmp-$PRGNAM # location to build the source
rm -rf $TMP/tmp-$PRGNAM/* # remove the remnants of previous build
mkdir -p $PKG             # place for the package to be built
rm -rf $PKG/*             # erase old package's contents
mkdir -p $OUTPUT          # place for the package to be saved

# Source file availability:
for (( i = 0; i < ${#SOURCE[*]}; i++ )) ; do
  if ! [ -f ${SOURCE[$i]} ]; then
    if ! [ "x${SRCURL[$i]}" == "x" ]; then
      # Check if the $SRCDIR is writable at all - if not, download to $OUTPUT
      [ -w "$SRCDIR" ] || SOURCE[$i]="$OUTPUT/$(basename ${SOURCE[$i]})"
      echo "Source '$(basename ${SOURCE[$i]})' not available yet..."
      echo "Will download file to $(dirname $SOURCE[$i])"
      wget -nv -T 30 -O "${SOURCE[$i]}" "${SRCURL[$i]}" || true
      if [ $? -ne 0 -o ! -s "${SOURCE[$i]}" ]; then
        echo "Downloading '$(basename ${SOURCE[$i]})' failed.. aborting the build."
        mv -f "${SOURCE[$i]}" "${SOURCE[$i]}".FAIL
        exit 1
      fi
    else
      echo "File '$(basename ${SOURCE[$i]})' not available.. aborting the build."
      exit 1
    fi
  fi
done

if [ "$P1" == "--download" ]; then
  echo "Download complete."
  exit 0
fi

# --- PACKAGE BUILDING ---

echo "++"
echo "|| $PRGNAM-$VERSION"
echo "++"

cd $TMP/tmp-$PRGNAM

echo "Extracting the source archive(s) for $PRGNAM..."
if $(file ${SOURCE[0]} | grep -q ": bzip2"); then
  tar -xjvf ${SOURCE[0]}
else
  tar -xvf ${SOURCE[0]}
fi
cd ${PRGNAM}-${VERSION}
chown -R root:root .
chmod -R u+w,go+r-w,a-s .

echo Building ...
LDFLAGS="$SLKLDFLAGS" \
CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure --prefix=/usr \
            --libdir=/usr/lib${LIBDIRSUFFIX} \
            --mandir=/usr/man \
            --localstatedir=/var \
            --with-docdir=/usr/doc/$PRGNAM-$VERSION \
            --sysconfdir=/etc/dosemu \
            --with-fdtarball=${SOURCE[1]} \
            --program-prefix="" \
            --program-suffix="" \
            --build=$ARCH-slackware-linux \
            2>&1 | tee $OUTPUT/configure-${PRGNAM}.log
make 2>&1 | tee $OUTPUT/make-${PRGNAM}.log

# Install all the needed stuff to the package dir
mkdir -p $PKG/usr/bin

# Use installwatch if available, to produce a logfile of the installation
# process that is more easily readable:
if $(which installwatch > /dev/null 2>&1); then
  installwatch -o $OUTPUT/install-${PRGNAM}.log make DESTDIR=$PKG install
else
  make DESTDIR=$PKG install 2>&1 |tee $OUTPUT/install-${PRGNAM}.log
fi

# Fix permissions of the binaries extracted from the freedos package:
chown -R root:root $PKG/usr/share/dosemu
chmod -R u+w,go+r-w,a-s $PKG/usr/share/dosemu

# Create the 'HDIMAGE_DIR' where dosemu looks for disk images (amongst others)
mkdir -p $PKG/var/lib/dosemu

# Dosemu misses a .desktop file
mkdir -p $PKG/usr/share/{applications,pixmaps}
cp etc/dosemu.xpm $PKG/usr/share/pixmaps
cat <<-EOT > $PKG/usr/share/applications/dosemu.desktop
	[Desktop Entry]
	Encoding=UTF-8
	Exec=xdosemu
	Name=dosemu
	GenericName=dosemu
	Comment=A DOS EMUlator
	Icon=/usr/share/pixmaps/dosemu.xpm
	Terminal=false
	Categories=Application;System;Utility;
	StartupNotify=true
	Type=Application
	EOT

# Add '.new' extension to the configuration files for the benefit of installpkg:
mv $PKG/etc/dosemu/dosemu.conf{,.new}
mv $PKG/etc/dosemu/dosemu.users{,.new}
mv $PKG/etc/dosemu/global.conf{,.new}

# Add this to the doinst.sh
! [ -d $PKG/install ] && mkdir -p $PKG/install
cat <<EOINS >> $PKG/install/doinst.sh
# Handle the incoming configuration files:
config() {
  for infile in \$1; do
    NEW="\$infile"
    OLD="\`dirname \$NEW\`/\`basename \$NEW .new\`"
    # If there's no config file by that name, mv it over:
    if [ ! -r \$OLD ]; then
      mv \$NEW \$OLD
    elif [ "\`cat \$OLD | md5sum\`" = "\`cat \$NEW | md5sum\`" ]; then
      # toss the redundant copy
      rm \$NEW
    fi
    # Otherwise, we leave the .new copy for the admin to consider...
  done
}

config etc/dosemu/dosemu.conf.new
config etc/dosemu/dosemu.users.new
config etc/dosemu/global.conf.new

# Update the desktop database (makes the menu entry appear without reboot)
if [ -x usr/bin/update-desktop-database ]; then
  chroot . /usr/bin/update-desktop-database /usr/share/applications >/dev/null 2>&1
fi

EOINS

# Add some documentation:
mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a $DOCS $PKG/usr/doc/$PRGNAM-$VERSION || true
cp -a $SRCDIR/$(basename $0) $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild
find $PKG/usr/doc -type f -exec chmod 644 {} \;

# Compress the man page(s):
if [ -d $PKG/usr/man ]; then
  find $PKG/usr/man -type f -name "*.?" -exec gzip -9f {} \;
  for i in $(find $PKG/usr/man -type l -name "*.?") ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done
fi

# Strip binaries:
( cd $PKG
  find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true
  find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true
)

# Add a package description:
mkdir -p $PKG/install
cat $SRCDIR/slack-desc > $PKG/install/slack-desc
if [ -f $SRCDIR/doinst.sh ]; then
  cat $SRCDIR/doinst.sh >> $PKG/install/doinst.sh
fi

# Build the package:
cd $PKG
makepkg --linkadd y --chown n $OUTPUT/${PRGNAM}-${VERSION}-${ARCH}-${BUILD}${TAG}.tgz 2>&1 | tee $OUTPUT/makepkg-${PRGNAM}.log
cd $OUTPUT
md5sum ${PRGNAM}-${VERSION}-${ARCH}-${BUILD}${TAG}.tgz > ${PRGNAM}-${VERSION}-${ARCH}-${BUILD}${TAG}.tgz.md5
cd -
cat $PKG/install/slack-desc | grep "^${PRGNAM}" > $OUTPUT/${PRGNAM}-${VERSION}-${ARCH}-${BUILD}${TAG}.txt

# Clean up the extra stuff:
if [ "$P1" = "--cleanup" ]; then
  rm -rf $TMP/tmp-$PRGNAM
  rm -rf $PKG
fi
