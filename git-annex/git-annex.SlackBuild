#!/bin/sh
# Generated by Alien's SlackBuild Toolkit: http://slackware.com/~alien/AST
# Copyright 2009, 2010, 2011, 2012  Eric Hameleers, Eindhoven, Netherlands
# Copyright 2012  Ron Parker <rdparker@gmail.com>
# All rights reserved.
#
#   Permission to use, copy, modify, and distribute this software for
#   any purpose with or without fee is hereby granted, provided that
#   the above copyright notice and this permission notice appear in all
#   copies.
#
#   THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
#   WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#   MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
#   IN NO EVENT SHALL THE AUTHORS AND COPYRIGHT HOLDERS AND THEIR
#   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
#   LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
#   USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
#   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
#   OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
#   OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
#   SUCH DAMAGE.
# -----------------------------------------------------------------------------
#
# Slackware SlackBuild script
# ===========================
# By:          Ron Parker <rdparker@gmail.com>
# For:         git-annex
# Descr:       Manage files with git, without checking their contents int
# URL:         http://git-annex.branchable.com/
# Needs:
# Changelog:
# verder-1:     18/Dec/2012 by Ron Parker <rdparker@gmail.com>
#              * Initial build.
# 3.20130102-2:	02/Jan/2012 by Ron Parker <rdparker@gmail.com>
#		* Update to version 3.20130102.
# 3.20130102-3:	08/Jan/2012 by Ron Parker <rdparker@gmail.com>
#		* Update to minor update of 7 January 2013
# 3.20130114-3:	14/Jan/2012 by Ron Parker <rdparker@gmail.com>
#		* Update to minor 14 January 2013
#
# Run 'sh git-annex.SlackBuild' to build a Slackware package.
# The package (.txz) and .txt file as well as build logs are created in /tmp .
# Install it using 'installpkg'.
#
# -----------------------------------------------------------------------------

# Set initial variables:

# Allow $ARCH to be preset before running the script.  This is useful in the
# case where someone is running a 32-bit chroot environment under an x86_64
# kernel:
ARCH=${ARCH:-$(uname -m)}

case "$ARCH" in
  i?86) GAARCH=i386 ;;
  x86_64) GAARCH=amd64 ;;
  *) echo "Package for $(uname -m) architecture is not available." ; exit 1 ;;
esac

PRGNAM=git-annex
BUILD=${BUILD:-3}
# The TAG is a unique identifier for all your Slackware packages.
# Use your initials as the value for TAG for instance.
TAG=${TAG:-_rdp}

# This covers most filenames you'd want as documentation. Change if needed.
DOCS="LICENSE README"

# Where do we look for sources?
SRCDIR=$(cd $(dirname $0); pwd)

# Place to build (TMP) package (PKG) and output (OUTPUT) the program:
TMP=${TMP:-/tmp/build}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

# Input URL: http://downloads.kitenet.net/git-annex/linux/
SOURCE="$SRCDIR/${PRGNAM}-standalone-${GAARCH}.tar.gz"
SRCURL="http://downloads.kitenet.net/${PRGNAM}/linux/${PRGNAM}-standalone-${GAARCH}.tar.gz"


##
## --- with a little luck, you won't have to edit below this point --- ##
##

# Automatically determine the architecture we're building on:
case "${ARCH}" in
  i?86) export ARCH=i486 ;;
  arm*) export ARCH=arm ;;
  # Unless $ARCH is already set, use uname -m for all other archs:
  *) export ARCH=$( uname -m ) ;;
esac

case "$ARCH" in
  i486)   SLKCFLAGS="-O2 -march=i486 -mtune=i686"
          SLKLDFLAGS=""; LIBDIRSUFFIX=""
          ;;
  x86_64) SLKCFLAGS="-O2 -fPIC"
          SLKLDFLAGS="-L/usr/lib64"; LIBDIRSUFFIX="64"
          ;;
  *)      SLKCFLAGS="-O2"
          SLKLDFLAGS=""; LIBDIRSUFFIX=""
          ;;
esac

# Exit the script on errors:
set -e
trap 'echo "$0 FAILED at line ${LINENO}" | tee $OUTPUT/error-${PRGNAM}.log' ERR
# Catch unitialized variables:
set -u
P1=${1:-1}

# Save old umask and set to 0022:
_UMASK_=$(umask)
umask 0022

# Create working directories:
mkdir -p $OUTPUT          # place for the package to be saved
mkdir -p $PKG         	  # place for the package to be built
rm -rf $PKG/*         	  # always erase old package's contents
rm -rf $OUTPUT/{configure,make,install,error,makepkg}-$PRGNAM.log
                          # remove old log files

# Source file availability:
if ! [ -f ${SOURCE} ]; then
  echo "Source '$(basename ${SOURCE})' not available yet..."
  # Check if the $SRCDIR is writable at all - if not, download to $OUTPUT
  [ -w "$SRCDIR" ] || SOURCE="$OUTPUT/$(basename $SOURCE)"
  if [ -f ${SOURCE} ]; then echo "Ah, found it!"; continue; fi
  if ! [ "x${SRCURL}" == "x" ]; then
    echo "Will download file to $(dirname $SOURCE)"
    wget -nv -T 20 -O "${SOURCE}" "${SRCURL}" || true
    if [ $? -ne 0 -o ! -s "${SOURCE}" ]; then
      echo "Downloading '$(basename ${SOURCE})' failed... aborting the build."
      mv -f "${SOURCE}" "${SOURCE}".FAIL
      exit 1
    fi
  else
    echo "File '$(basename ${SOURCE})' not available... aborting the build."
    exit 1
  fi
fi

if [ "$P1" == "--download" ]; then
  echo "Download complete."
  exit 0
fi

# --- PACKAGE BUILDING ---

VERSION=${VERSION:-$(tar zxf git-annex-standalone-${GAARCH}.tar.gz -O git-annex.linux/bin/git-annex | strings | egrep '^[0-9.]{10}$')}

echo "++"
echo "|| $PRGNAM-$VERSION"
echo "++"

# Explode the package framework:
if [ -f $SRCDIR/_$PRGNAM.tar.gz ]; then
  cd $PKG
  explodepkg $SRCDIR/_$PRGNAM.tar.gz
  cd -
fi

mkdir -p $PKG/usr/lib${LIBDIRSUFFIX}
cd $PKG/usr/lib${LIBDIRSUFFIX}
echo "Extracting the source archive(s) for $PRGNAM..."
if $(file ${SOURCE} | grep -qi ": 7-zip"); then
  7za x ${SOURCE}
elif $(file ${SOURCE} | grep -qi ": zip"); then
  unzip ${SOURCE}
else
  tar -xvf ${SOURCE}
fi
cd ${PKG}
chown -R root:root .
chmod -R u+w,go+r-w,a+X-s .
mv ${PKG}/usr/lib${LIBDIRSUFFIX}/git-annex.linux ${PKG}/usr/lib${LIBDIRSUFFIX}/git-annex

# Install the desktop files
mkdir -p ${PKG}/etc/xdg/autostart
mkdir -p ${PKG}/usr/share/applications
install -m 644 $SRCDIR/git-annex-autostart.desktop ${PKG}/etc/xdg/autostart/git-annex.desktop
install -m 644 $SRCDIR/git-annex.desktop ${PKG}/usr/share/applications
sed -i "s=/usr/bin/=/usr/lib${LIBDIRSUFFIX}/${PRGNAM}/=" ${PKG}/etc/xdg/autostart/git-annex.desktop
sed -i "s=/usr/bin/=/usr/lib${LIBDIRSUFFIX}/${PRGNAM}/=" ${PKG}/usr/share/applications/git-annex.desktop

# Put a script in the path
mkdir ${PKG}/usr/bin
cat <<END >> $PKG/usr/bin/git-annex
#! /bin/sh

exec /usr/lib${LIBDIRSUFFIX}/${PRGNAM}/\$(basename "\$0") "\$@"
END
chmod 755 $PKG/usr/bin/git-annex
ln -s $PKG/usr/bin/git-annex $PKG/usr/bin/git-annex-webapp

# Add this to the doinst.sh:
mkdir -p $PKG/install
cat <<EOINS >> $PKG/install/doinst.sh
# Update the desktop database:
if [ -x usr/bin/update-desktop-database ]; then
  chroot . /usr/bin/update-desktop-database usr/share/applications > /dev/null 2>&1
fi

# Update hicolor theme cache:
if [ -d usr/share/icons/hicolor ]; then
  if [ -x /usr/bin/gtk-update-icon-cache ]; then
    chroot . /usr/bin/gtk-update-icon-cache -f -t usr/share/icons/hicolor 1> /dev/null 2> /dev/null
  fi
fi

# Update the mime database:
if [ -x usr/bin/update-mime-database ]; then
  chroot . /usr/bin/update-mime-database usr/share/mime >/dev/null 2>&1
fi

EOINS

# Add documentation:
mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
for file in $DOCS; do
    cp ${PKG}/usr/lib${LIBDIRSUFFIX}/${PRGNAM}/$file $PKG/usr/doc/$PRGNAM-$VERSION || true
done
cat $SRCDIR/$(basename $0) > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild
chown -R root:root $PKG/usr/doc/$PRGNAM-$VERSION
find $PKG/usr/doc -type f -exec chmod 644 {} \;

# Strip binaries (if any):
find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

# Add a package description:
mkdir -p $PKG/install
cat $SRCDIR/slack-desc > $PKG/install/slack-desc
if [ -f $SRCDIR/doinst.sh ]; then
  cat $SRCDIR/doinst.sh >> $PKG/install/doinst.sh
fi

# Build the package:
cd $PKG
makepkg --linkadd y --chown n $OUTPUT/${PRGNAM}-${VERSION}-${ARCH}-${BUILD}${TAG}.${PKGTYPE:-txz} 2>&1 | tee $OUTPUT/makepkg-${PRGNAM}.log
cd $OUTPUT
md5sum ${PRGNAM}-${VERSION}-${ARCH}-${BUILD}${TAG}.${PKGTYPE:-txz} > ${PRGNAM}-${VERSION}-${ARCH}-${BUILD}${TAG}.${PKGTYPE:-txz}.md5
cd -
cat $PKG/install/slack-desc | grep "^${PRGNAM}" > $OUTPUT/${PRGNAM}-${VERSION}-${ARCH}-${BUILD}${TAG}.txt

# Restore the original umask:
umask ${_UMASK_}
